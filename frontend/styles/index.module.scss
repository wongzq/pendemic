.main {
  flex: 1;
  align-self: center;
  display: grid;
  grid-template-columns: 1fr;
  grid-template-rows: auto 1fr auto;
  grid-template-areas:
    "plan"
    "logo"
    "write"
    "quote";
  width: 100%;
  height: 50vh;
  max-width: 25rem;
  margin: 3rem 0rem;
  overflow: hidden;
}

.logo {
  flex: 1;
  justify-self: center;
  grid-area: logo;
  display: block;
  width: 100%;
  height: 100%;
  min-height: 15rem;

  // width: 100%;
  // padding-bottom: 100%;
  // max-width: 50vh;
}

.svg_plan {
  position: absolute;
  pointer-events: none;
}

.svg_write {
  position: absolute;
  pointer-events: none;
}

.txt_plan {
  grid-area: plan;
  display: flex;
  flex-direction: column;
  justify-content: flex-start;

  & > h1 {
    text-align: left;
    color: var(--lavender);
  }
  & > h2 {
    display: none;
    text-align: left;
  }
}

.txt_write {
  grid-area: write;
  display: flex;
  flex-direction: column;
  justify-content: flex-end;

  & > h1 {
    text-align: right;
    color: var(--ember);
  }
  & > h2 {
    display: none;
    text-align: right;
  }
}

h1.txt_quote {
  grid-area: quote;
  margin-top: 5rem;
  margin-bottom: 2.5rem;
  max-width: 30rem;
  left: 50%;
  transform: translateX(-50%);
  text-align: center;
  background: linear-gradient(
    to right,
    var(--lavender-dark),
    var(--lavender-light),
    var(--ember-light),
    var(--ember-dark)
  );
  background-clip: text;
  color: transparent;

  &::before {
    content: "";
    position: absolute;
    top: -3.75rem;
    left: 0;
    width: 100%;
    height: 0.5rem;
    border-radius: 0.25rem;
    background: linear-gradient(
      to right,
      var(--lavender-light),
      transparent,
      var(--ember-light)
    );
  }
}

@media only screen and (min-width: 64rem) {
  .main {
    display: grid;
    grid-template-columns: 1fr 1fr 1fr;
    grid-template-rows: 1fr;
    grid-template-areas:
      "plan logo write"
      "quote quote quote";
    max-width: 100%;
  }

  .logo {
    width: 100%;
    padding-bottom: 100%;
  }

  .svg_plan {
    & > g {
      pointer-events: all;
      cursor: pointer;
    }
    &.plan_hovered > g > path {
      fill: var(--lavender-light);
      filter: drop-shadow(0rem 0.5rem 0.5rem var(--shadow));
    }
  }

  .svg_write {
    & > g {
      pointer-events: all;
      cursor: pointer;
    }
    &.write_hovered > g > path {
      fill: var(--ember-light);
      filter: drop-shadow(0.25rem 0.5rem 0.5rem var(--shadow));
    }
  }

  .txt_plan {
    align-self: center;
    justify-content: center;
    width: 100%;
    height: 6.25rem;

    & > h1 {
      position: absolute;
      text-align: right;
      width: 100%;
      z-index: 1;
    }
    & > h2 {
      display: inline;
      text-align: right;
      width: 100%;
      opacity: 0;
      transform: translate(-25%, 50%);
    }
    &.plan_hovered > h1 {
      color: var(--lavender-light);
      text-shadow: 0rem 0.125rem 0.25rem var(--shadow);
      transform: translateY(-50%);
    }
    &.plan_hovered > h2 {
      opacity: 1;
      text-shadow: 0rem 0.125rem 0.25rem var(--shadow);
      transform: translateY(50%);
    }
  }

  .txt_write {
    align-self: center;
    justify-content: center;
    width: 100%;
    height: 6.25rem;

    & > h1 {
      position: absolute;
      text-align: left;
      width: 100%;
      z-index: 1;
    }
    & > h2 {
      display: inline;
      text-align: left;
      width: 100%;
      opacity: 0;
      transform: translate(25%, 50%);
    }
    &.write_hovered > h1 {
      color: var(--ember-light);
      text-shadow: 0rem 0.125rem 0.25rem var(--shadow);
      transform: translateY(-50%);
    }
    &.write_hovered > h2 {
      opacity: 1;
      text-shadow: 0rem 0.125rem 0.25rem var(--shadow);
      transform: translateY(50%);
    }
  }
}
